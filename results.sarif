{
  "runs": [
    {
      "tool": {
        "driver": {
          "rules": [
            {
              "id": "AAA",
              "shortDescription": {
                "text": "AAA1 shortDescription"
              },
              "fullDescription": {
                "text": "AAA1 fullDescription"
              },
              "help": {
                "text": "AAA1 help text",
                "markdown": "AAA1 help markdown"
              }
            },
            {
              "id": "AAA",
              "name": "AAA2",
              "shortDescription": {
                "text": "AAA2 shortDescription"
              },
              "fullDescription": {
                "text": "AAA2 fullDescription"
              },
              "help": {
                "text": "AAA2 help text",
                "markdown": "AAA2 help markdown"
              }
            }
          ],
          "name": "GLOG",
          "fullName": "Glog, Making software more secure",
          "organization": "GLOG",
          "version": "1.0.0",
          "semanticVersion": "1.0.0"
        }
      },
      "invocations": [
        {
          "executionSuccessful": true,
          "endTimeUtc": "2024-08-15T09:44:41Z"
        }
      ],
      "properties": {
        "metrics": {
          "_totals": {
            "loc": 1556,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "SEVERITY.LOW": 9,
            "CONFIDENCE.LOW": 6,
            "SEVERITY.MEDIUM": 36,
            "CONFIDENCE.MEDIUM": 39,
            "SEVERITY.HIGH": 4,
            "CONFIDENCE.HIGH": 4
          }
        }
      },
      "results": [
        {
          "message": {
            "text": "Probable insecure usage of temp file/directory."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "api_key_file = Path('/tmp/supersecret.txt')\n"
                  },
                  "endColumn": 43,
                  "endLine": 6,
                  "startColumn": 21,
                  "startLine": 6
                },
                "artifactLocation": {
                  "uri": "file:///app/bad/api_post.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\napi_key_file = Path('/tmp/supersecret.txt')\n\n"
                  },
                  "endLine": 7,
                  "startLine": 5
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "ruleIndex": 0
        },
        {
          "message": {
            "text": "Possible SQL injection vector through string-based query construction."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        c.execute(\"INSERT INTO users (user, password, failures) VALUES ('%s', '%s', '%d')\" %(u, p, 0))\n"
                  },
                  "endColumn": 91,
                  "endLine": 19,
                  "startColumn": 19,
                  "startLine": 19
                },
                "artifactLocation": {
                  "uri": "file:///app/bad/db.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "    for u,p in users:\n        c.execute(\"INSERT INTO users (user, password, failures) VALUES ('%s', '%s', '%d')\" %(u, p, 0))\n\n"
                  },
                  "endLine": 20,
                  "startLine": 18
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "ruleIndex": 1
        }
      ]
    }
  ],
  "version": "2.1.0",
  "$schema": "https://json.schemastore.org/sarif-2.1.0.json"
}
